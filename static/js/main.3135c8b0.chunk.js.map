{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","React","createElement","className","id","style","backgroundColor","mode","color","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","concat","Link","to","title","aria-label","aria-current","aboutText","role","placeholder","onClick","togglemode","switch","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","heading","rows","value","onChange","event","target","disabled","length","newText","toUpperCase","showalert","toLowerCase","element","document","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","split","join","navigator","clipboard","writeText","filter","Alert","height","alert","word","lower","charAt","slice","capitalize","message","App","showAlert","setalert","setTimeout","Mode","setMode","_useState3","_useState4","Switch","setSwitch","_useState5","_useState6","Router","Routes","Route","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"wOAEe,SAASA,EAAMC,GAC1B,OACAC,IAAAC,cAAA,WACID,IAAAC,cAAA,OAAKC,UAAU,YAAYC,GAAG,oBAC1BH,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,MAAIC,UAAU,mBAAmBC,GAAG,cACpCH,IAAAC,cAAA,UAAQG,MAAO,CAACC,gBAAgC,UAAfN,EAAMO,KAAiB,QAAQ,UAAUC,MAAqB,UAAfR,EAAMO,KAAiB,QAAQ,SAAWJ,UAAU,mBAAmBM,KAAK,SAASC,iBAAe,WAAWC,iBAAe,eAAeC,gBAAc,OAAOC,gBAAc,eAAe,sBAI/QZ,IAAAC,cAAA,OAAKE,GAAG,cAAcD,UAAU,mCAAmCW,kBAAgB,aAAaC,iBAAe,qBAC/Gd,IAAAC,cAAA,OAAKC,UAAU,iBAAiBE,MAAO,CAACC,gBAAgC,UAAfN,EAAMO,KAAiB,QAAQ,UAAUC,MAAqB,UAAfR,EAAMO,KAAiB,QAAQ,UACnIN,IAAAC,cAAA,cAAQ,4CAAiD,6WAA0WD,IAAAC,cAAA,YAAM,mBAAsB,kDAIvcD,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,MAAIC,UAAU,mBAAmBC,GAAG,cACpCH,IAAAC,cAAA,UAAQG,MAAO,CAACC,gBAAgC,UAAfN,EAAMO,KAAiB,QAAQ,UAAUC,MAAqB,UAAfR,EAAMO,KAAiB,QAAQ,SAAUJ,UAAU,6BAA6BM,KAAK,SAASC,iBAAe,WAAWC,iBAAe,eAAeC,gBAAc,QAAQC,gBAAc,eAAe,sBAIzRZ,IAAAC,cAAA,OAAKE,GAAG,cAAcD,UAAU,8BAA8BW,kBAAgB,aAAaC,iBAAe,qBAC1Gd,IAAAC,cAAA,OAAKC,UAAU,iBAAiBE,MAAO,CAACC,gBAAgC,UAAfN,EAAMO,KAAiB,QAAQ,UAAUC,MAAqB,UAAfR,EAAMO,KAAiB,QAAQ,UACnIN,IAAAC,cAAA,cAAQ,6CAAkD,8WAA2WD,IAAAC,cAAA,YAAM,mBAAsB,kDAIzcD,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,MAAIC,UAAU,mBAAmBC,GAAG,gBACpCH,IAAAC,cAAA,UAAQG,MAAO,CAACC,gBAAgC,UAAfN,EAAMO,KAAiB,QAAQ,UAAUC,MAAqB,UAAfR,EAAMO,KAAiB,QAAQ,SAAWJ,UAAU,6BAA6BM,KAAK,SAASC,iBAAe,WAAWC,iBAAe,iBAAiBC,gBAAc,QAAQC,gBAAc,iBAAiB,sBAI9RZ,IAAAC,cAAA,OAAKE,GAAG,gBAAgBD,UAAU,8BAA8BW,kBAAgB,eAAeC,iBAAe,qBAC9Gd,IAAAC,cAAA,OAAKC,UAAU,iBAAiBE,MAAO,CAACC,gBAAgC,UAAfN,EAAMO,KAAiB,QAAQ,UAAUC,MAAqB,UAAfR,EAAMO,KAAiB,QAAQ,UACnIN,IAAAC,cAAA,cAAQ,4CAAiD,8WAA2WD,IAAAC,cAAA,YAAM,mBAAsB,+DClCrc,SAASc,EAAOhB,GAC7B,OACEC,IAAAC,cAAA,OAAKC,UAAS,iBAAAc,OAAmBjB,EAAMO,KAAI,QAAAU,OAAOjB,EAAMO,KAAI,mBAC1DN,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAACgB,IAAI,CAACf,UAAU,eAAegB,GAAG,KAAKnB,EAAMoB,OAE7CnB,IAAAC,cAAA,UAAQC,UAAU,iBAAiBM,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BE,gBAAc,yBAAyBD,gBAAc,QAAQS,aAAW,qBAC1LpB,IAAAC,cAAA,QAAMC,UAAU,yBAElBF,IAAAC,cAAA,OAAKC,UAAU,2BAA2BC,GAAG,0BAC3CH,IAAAC,cAAA,MAAIC,UAAU,mCACZF,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAACgB,IAAI,CAACf,UAAU,WAAWmB,eAAa,OAAOH,GAAG,KAAI,SAGxDlB,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAACgB,IAAI,CAACf,UAAU,WAAWgB,GAAG,UAAUnB,EAAMuB,aAIlDtB,IAAAC,cAAA,QAAMC,UAAU,SAASqB,KAAK,UAC5BvB,IAAAC,cAAA,SAAOC,UAAU,oBAAoBM,KAAK,SAASgB,YAAY,SAASJ,aAAW,WACnFpB,IAAAC,cAAA,UAAQC,UAAU,kBAAkBM,KAAK,UAAS,WAEpDR,IAAAC,cAAA,OAAKC,UAAU,8BACbF,IAAAC,cAAA,SAAOC,UAAU,mBAAmBuB,QAAS1B,EAAM2B,WAAWlB,KAAK,WAAWe,KAAK,SAASpB,GAAG,2BAC/FH,IAAAC,cAAA,SAAOC,UAAS,yBAAAc,OAA2BjB,EAAM4B,QAAUC,QAAQ,0BAAyB,wBC3BzF,SAASC,EAAS9B,GAC/B,IAwCC+B,EACqBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA5BI,EAAIF,EAAA,GAACG,EAAOH,EAAA,GAElB,OACEhC,IAAAC,cAAAD,IAAAoC,SAAA,KACEpC,IAAAC,cAAA,OAAKC,UAAU,YAAYE,MAAO,CAACG,MAAsB,UAAfR,EAAMO,KAAiB,QAAQ,UACrEN,IAAAC,cAAA,MAAIC,UAAY,QAAQH,EAAMsC,SAC9BrC,IAAAC,cAAA,YAAUC,UAAU,eAAeC,GAAG,SAASmC,KAAK,IAAIlC,MAAO,CAACC,gBAAgC,UAAfN,EAAMO,KAAiB,QAAQ,UAAUC,MAAqB,UAAfR,EAAMO,KAAiB,QAAQ,SAAUiC,MAAOL,EAAMM,SA/CvK,SAACC,GACtBN,EAAQM,EAAMC,OAAOH,UA+CfvC,IAAAC,cAAA,UAAQ0C,SAA0B,IAAhBT,EAAKU,OAAc1C,UAAU,uBAAuBuB,QA7CxD,WACpB,IAAIoB,EAAUX,EAAKY,cACnBX,EAAQU,GACR9C,EAAMgD,UAAU,yBAAyB,aA0C2D,wBAC9F/C,IAAAC,cAAA,UAAQ0C,SAA0B,IAAhBT,EAAKU,OAAc1C,UAAU,uBAAuBuB,QAzCvD,WACrB,IAAIoB,EAAUX,EAAKc,cACnBb,EAAQU,GACR9C,EAAMgD,UAAU,yBAAyB,aAsC4D,wBAC/F/C,IAAAC,cAAA,UAAQ0C,SAA0B,IAAhBT,EAAKU,OAAc1C,UAAU,uBAAuBuB,QArClD,WAE1B,IAAMwB,EAAUC,SAASjD,cAAc,KACjCkD,EAAO,IAAIC,KAAK,CAAClB,GAAO,CAAC1B,KAAM,eACrCyC,EAAQI,KAAOC,IAAIC,gBAAgBJ,GACnCF,EAAQO,SAAW,WACnBN,SAASO,KAAKC,YAAYT,GAC1BA,EAAQU,UA8BkG,qBACpG3D,IAAAC,cAAA,UAAQ0C,SAA0B,IAAhBT,EAAKU,OAAc1C,UAAU,uBAAuBuB,QAnBpD,WACxB,IAAIoB,EAAUX,EAAK0B,MAAM,QACzBzB,EAAQU,EAAQgB,KAAK,MACrB9D,EAAMgD,UAAU,2BAA2B,aAgB6D,2BAClG/C,IAAAC,cAAA,UAAQ0C,SAA0B,IAAhBT,EAAKU,OAAc1C,UAAU,uBAAuBuB,QAf5D,WAChBU,EAAQ,IACRpC,EAAMgD,UAAU,wBAAwB,aAawD,kBAC1F/C,IAAAC,cAAA,UAAQ0C,SAA0B,IAAhBT,EAAKU,OAAc1C,UAAU,uBAAuBuB,QA1B7D,WACfqC,UAAUC,UAAUC,UAAU9B,GAC9BnC,EAAMgD,UAAU,sBAAsB,aAwByD,kBAE7F/C,IAAAC,cAAA,OAAKC,UAAU,YAAYE,MAAO,CAACG,MAAsB,UAAfR,EAAMO,KAAiB,QAAQ,UACvEN,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,SAAGD,IAAAC,cAAA,SAAKiC,EAAK0B,MAAM,OAAOK,OAAO,SAAChB,GAAa,OAA0B,IAAnBA,EAAQL,SAAgBA,QAAW,cAAW5C,IAAAC,cAAA,SAAIiC,EAAKU,QAAW,eACxH5C,IAAAC,cAAA,SAAGD,IAAAC,cAAA,SAAoF,KAA/EiC,EAAK0B,MAAM,OAAOK,OAAO,SAAChB,GAAa,OAA0B,IAAnBA,EAAQL,SAAgBA,QAAmB,iBACjG5C,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,SAAGD,IAAAC,cAAA,UAAKiC,EAAKU,OAAS,EAAEV,EAAK,yBC/DtB,SAASgC,EAAMnE,GAK5B,OACEC,IAAAC,cAAA,OAAKG,MAAO,CAAC+D,OAAO,SACnBpE,EAAMqE,OAASpE,IAAAC,cAAA,OAAKC,UAAS,eAAAc,OAAiBjB,EAAMqE,MAAM5D,KAAI,gCAAgCe,KAAK,SAChGvB,IAAAC,cAAA,cAPe,SAACoE,GAChB,IAAMC,EAAQD,EAAKrB,cACnB,OAAOsB,EAAMC,OAAO,GAAGzB,cAAcwB,EAAME,MAAM,GAKxCC,CAAW1E,EAAMqE,MAAM5D,MAAM,MAAYT,EAAMqE,MAAMM,qBC4CvDC,MA5Cf,WACE,IAeMC,EAAY,SAACF,EAAQlE,GACzBqE,EAAS,CACPH,QAAUA,EACVlE,KAAMA,IAERsE,WAAW,WACTD,EAAS,OACR,OACJ/C,EACqBC,mBAAS,SAAQC,EAAAC,YAAAH,EAAA,GAAjCiD,EAAI/C,EAAA,GAACgD,EAAOhD,EAAA,GAAAiD,EACQlD,mBAAS,QAAOmD,EAAAjD,YAAAgD,EAAA,GAApCE,EAAMD,EAAA,GAACE,EAASF,EAAA,GAAAG,EACEtD,mBAAS,MAAKuD,EAAArD,YAAAoD,EAAA,GAAhCjB,EAAKkB,EAAA,GAACT,EAAQS,EAAA,GACpB,OACEtF,IAAAC,cAAAD,IAAAoC,SAAA,KACApC,IAAAC,cAACsF,IAAM,KACLvF,IAAAC,cAACc,EAAM,CAACI,MAAM,YAAYb,KAAMyE,EAAOpD,OAAQwD,EAAQzD,WA9BxC,WACL,UAATqD,GACDC,EAAQ,QACRI,EAAU,SACVlC,SAASO,KAAKrD,MAAMC,gBAAkB,UACtCuE,EAAU,6BAA6B,aAGvCI,EAAQ,SACRI,EAAU,QACVlC,SAASO,KAAKrD,MAAMC,gBAAkB,QACtCuE,EAAU,8BAA8B,aAmBuCtD,UAAU,UACzFtB,IAAAC,cAACiE,EAAK,CAACE,MAAOA,IACdpE,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAACuF,IAAM,KACLxF,IAAAC,cAACwF,IAAK,CAACC,OAAK,EAACC,KAAM,SAAS1C,QAASjD,IAAAC,cAACH,EAAK,CAACQ,KAAMyE,MAClD/E,IAAAC,cAACwF,IAAK,CAACC,OAAK,EAACC,KAAO,IAAI1C,QAASjD,IAAAC,cAAC4B,EAAQ,CAACkB,UAAW6B,EAAWvC,QAAQ,iEAAiE/B,KAAMyE,WCjC3Ia,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWxD,SAASyD,eAAe,SACpDC,OACH5G,IAAAC,cAACD,IAAM6G,WAAU,KACf7G,IAAAC,cAAC0E,EAAG,QAORiB","file":"static/js/main.3135c8b0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n    return (\r\n    <div>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\" >\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button style={{backgroundColor: props.mode === \"light\"?\"white\":\"#121212\",color:props.mode === \"light\"?\"black\":\"white\" }} className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" >\r\n                    Accordion Item #1\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={{backgroundColor: props.mode === \"light\"?\"white\":\"#121212\",color:props.mode === \"light\"?\"black\":\"white\" }}>\r\n                    <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" >\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button style={{backgroundColor: props.mode === \"light\"?\"white\":\"#121212\",color:props.mode === \"light\"?\"black\":\"white\" }}className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" >\r\n                    Accordion Item #2\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={{backgroundColor: props.mode === \"light\"?\"white\":\"#121212\",color:props.mode === \"light\"?\"black\":\"white\" }} >\r\n                    <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" >\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button style={{backgroundColor: props.mode === \"light\"?\"white\":\"#121212\",color:props.mode === \"light\"?\"black\":\"white\" }} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" >\r\n                    Accordion Item #3\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={{backgroundColor: props.mode === \"light\"?\"white\":\"#121212\",color:props.mode === \"light\"?\"black\":\"white\" }}>\r\n                    <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-${props.mode} bg-${props.mode} navbar-expand`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        {/*<a className=\"navbar-brand\" href=\"#\">{props.title}</a> */}\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              {/*<a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/About\">{props.aboutText}</Link>\r\n              {/*<a className=\"nav-link\" href=\"/About\">{props.aboutText}</a> */}\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n          </form>\r\n          <div className=\"form-check form-switch m-3\" >\r\n            <input className=\"form-check-input\" onClick={props.togglemode}type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className={`form-check-label text-${props.switch}`} htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string,\r\n    aboutText: PropTypes.string, \r\n    togglemode: PropTypes.func, \r\n    mode: PropTypes.string,\r\n    switch: PropTypes.string}","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  }\r\n  const handleUpClick = () =>{\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showalert(\"Converted to Uppercase\",\"success\");\r\n  }\r\n  const handleLowClick = () =>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showalert(\"Converted to Lowercase\",\"success\");\r\n  }\r\n  const handleDownloadClick = () =>{\r\n    //if(text.length > 0){\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([text], {type: 'text/plain'});\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"text.txt\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n    //}\r\n    /*else{\r\n      props.showalert(\"First enter some text to download\",\"warning\");\r\n    }*/\r\n\r\n  }\r\n  const copyText = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showalert(\"Copied to Clipboard\",\"success\");\r\n\r\n  }\r\n  const RemoveSpacesClick = () =>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showalert(\"Extra spaces are removed\",\"success\");\r\n  }\r\n  const clearText = () =>{\r\n    setText('');\r\n    props.showalert(\"Text has been Cleared\",\"success\");\r\n  }\r\n  const[text,setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color: props.mode === \"light\"?\"black\":\"white\"}}>\r\n          <h3 className = \"mb-2\">{props.heading}</h3>\r\n          <textarea className=\"form-control\" id=\"mytext\" rows=\"8\" style={{backgroundColor: props.mode === \"light\"?\"white\":\"#121212\",color:props.mode === \"light\"?\"black\":\"white\" }}value={text} onChange={handleOnChange}></textarea>\r\n          <button disabled={text.length === 0} className=\"btn btn-primary  m-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n          <button disabled={text.length === 0} className=\"btn btn-primary  m-2\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n          <button disabled={text.length === 0} className=\"btn btn-primary  m-2\" onClick={handleDownloadClick}>Download the text</button>\r\n          <button disabled={text.length === 0} className=\"btn btn-primary  m-2\" onClick={RemoveSpacesClick}>Remove the Extra Spaces</button>\r\n          <button disabled={text.length === 0} className=\"btn btn-primary  m-2\" onClick={clearText}>Clear the text</button>\r\n          <button disabled={text.length === 0} className=\"btn btn-primary  m-2\" onClick={copyText}>Copy the Text</button>\r\n      </div>\r\n      <div className=\"container\" style={{color: props.mode === \"light\"?\"black\":\"white\"}}>\r\n        <h2>Text Summary</h2>\r\n        <p><b>{(text.split(/\\s+/).filter((element) => {return element.length !== 0})).length}</b> words and <b>{text.length}</b> characters</p>\r\n        <p><b>{(text.split(/\\s+/).filter((element) => {return element.length !== 0})).length * 0.008}</b> minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p><em>{text.length > 0?text:\"Nothing to Preview\"}</em></p>\r\n      </div>\r\n    </>\r\n      \r\n\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\nexport default function Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height:'50px'}}>\r\n    {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}: </strong>{props.alert.message}\r\n    </div>}\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React,{useState} from 'react'\nimport Alert from './Components/Alert';\nimport {HashRouter as Router,Routes,Route} from 'react-router-dom';\n\n\nfunction App() {\n  const toggleMode = () =>{\n    if(Mode === 'light'){\n      setMode('dark');\n      setSwitch('light');\n      document.body.style.backgroundColor = \"#121212\";\n      showAlert(\"Dark Mode has been enabled\",\"success\");\n      //document.title = 'TextUtils - Dark Mode'\n    }else{\n      setMode('light');\n      setSwitch('dark');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\",\"success\");\n      //document.title = 'TextUtils - Light Mode'\n    }\n  }\n  const showAlert = (message,type) =>{\n    setalert({\n      message : message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  }\n  const[Mode,setMode] = useState(\"light\");\n  const[Switch,setSwitch] = useState(\"dark\");\n  const[alert,setalert] = useState(null);\n  return (\n    <>\n    <Router>\n      <Navbar title=\"TextUtils\" mode={Mode}  switch={Switch} togglemode={toggleMode} aboutText=\"About\"/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        <Routes>\n          <Route exact path ='/About' element={<About mode={Mode}/>}/>\n          <Route exact path = '/' element={<TextForm showalert={showAlert} heading=\"Try TextUtils - Word Counter, Character Counter, Remove Spaces\" mode={Mode}/>}/> \n        </Routes>\n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}