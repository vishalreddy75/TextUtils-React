{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","onClick","togglemode","switch","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","rows","backgroundColor","value","onChange","event","target","newText","toUpperCase","showalert","toLowerCase","length","element","document","file","Blob","URL","createObjectURL","download","body","appendChild","click","split","join","Alert","alert","word","lower","charAt","slice","capitalize","message","App","showAlert","setalert","setTimeout","Mode","setMode","_useState3","_useState4","Switch","setSwitch","_useState5","_useState6","aboutText","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.46c18795.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-${props.mode} bg-${props.mode} navbar-expand`}>\r\n      <div className=\"container-fluid\">\r\n        {/*<Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/*<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            {/*\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/About\">{props.aboutText}</Link>\r\n              <a className=\"nav-link\" href=\"/About\">{props.aboutText}</a>\r\n            </li>*/}\r\n          </ul>\r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n          </form>\r\n          <div className=\"form-check form-switch m-3\" >\r\n            <input className=\"form-check-input\" onClick={props.togglemode}type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className={`form-check-label text-${props.switch}`} htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string,\r\n    aboutText: PropTypes.string, \r\n    togglemode: PropTypes.func, \r\n    mode: PropTypes.string,\r\n    switch: PropTypes.string}","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  }\r\n  const handleUpClick = () =>{\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showalert(\"Converted to Uppercase\",\"success\");\r\n  }\r\n  const handleLowClick = () =>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showalert(\"Converted to Lowercase\",\"success\");\r\n  }\r\n  const handleDownloadClick = () =>{\r\n    if(text.length > 0){\r\n      const element = document.createElement(\"a\");\r\n      const file = new Blob([text], {type: 'text/plain'});\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = \"text.txt\";\r\n      document.body.appendChild(element);\r\n      element.click();\r\n    }else{\r\n      props.showalert(\"First enter some text to download\",\"warning\");\r\n    }\r\n\r\n  }\r\n  const RemoveSpacesClick = () =>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showalert(\"Extra spaces are removed\",\"success\");\r\n  }\r\n  const clearText = () =>{\r\n    setText('');\r\n    props.showalert(\"Text has been Cleared\",\"success\");\r\n  }\r\n  const[text,setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color: props.mode === \"light\"?\"black\":\"white\"}}>\r\n          <h3>{props.heading}</h3>\r\n          <textarea className=\"form-control\" id=\"mytext\" rows=\"8\" style={{backgroundColor: props.mode === \"light\"?\"white\":\"#121212\",color:props.mode === \"light\"?\"black\":\"white\" }}value={text} onChange={handleOnChange}></textarea>\r\n          <div className=\"btn btn-primary  m-2\" onClick={handleUpClick}>Click to make text Uppercase</div>\r\n          <div className=\"btn btn-primary  m-2\" onClick={handleLowClick}>Click to make text Lowercase</div>\r\n          <div className=\"btn btn-primary  m-2\" onClick={handleDownloadClick}>Click to download the text</div>\r\n          <div className=\"btn btn-primary  m-2\" onClick={RemoveSpacesClick}>Click to remove the extra spaces</div>\r\n          <div className=\"btn btn-primary  m-2\" onClick={clearText}>Click to clear the text</div>\r\n      </div>\r\n      <div className=\"container\" style={{color: props.mode === \"light\"?\"black\":\"white\"}}>\r\n        <h2>Text Summary</h2>\r\n        <p><b>{text.split(' ').length}</b> words and <b>{text.length}</b> characters</p>\r\n        <p><b>{text.split(' ').length * 0.008}</b> minutes read</p>\r\n        <p><b><em>{text}</em></b></p>\r\n      </div>\r\n    </>\r\n      \r\n\r\n  )\r\n}\r\n","import React from 'react'\r\nexport default function Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}: </strong>{props.alert.message}\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\n//import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React,{useState} from 'react'\nimport Alert from './Components/Alert';\n//import {BrowserRouter as Router,Routes,Route} from 'react-router-dom';\n\n\nfunction App() {\n  const toggleMode = () =>{\n    if(Mode === 'light'){\n      setMode('dark');\n      setSwitch('light');\n      document.body.style.backgroundColor = \"#121212\";\n      showAlert(\"Dark Mode has been enabled\",\"success\");\n      document.title = 'TextUtils - Dark Mode'\n    }else{\n      setMode('light');\n      setSwitch('dark');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\",\"success\");\n      document.title = 'TextUtils - Light Mode'\n    }\n  }\n  const showAlert = (message,type) =>{\n    setalert({\n      message : message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  }\n  const[Mode,setMode] = useState(\"light\");\n  const[Switch,setSwitch] = useState(\"dark\");\n  const[alert,setalert] = useState(null);\n  return (\n    <>\n      <Navbar title=\"TextUtils\" mode={Mode}  switch={Switch} togglemode={toggleMode} aboutText=\"About\"/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      <TextForm showalert={showAlert} heading=\"Enter the text to analyze below\" mode={Mode}/>\n      {/*\n        <Routes>\n          <Route exact path ='/About' element={<About mode={Mode} togglemode={toggleMode}/>}/>\n          <Route exact path = '/' element={<TextForm showalert={showAlert} heading=\"Enter the text to analyze below\" mode={Mode}/>}/> \n        </Routes>\n        */ }\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}